{"version":3,"file":"static/js/362.19d45a44.chunk.js","mappings":"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","sources":["components/Profile/Profileinfo/ProfileInfo.module.css","components/Profile/Profileinfo/ProfileStatusWithHooks.tsx","components/Profile/Profileinfo/ProfileInfo.tsx","webpack://connectify/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://connectify/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/Post/PostForm.tsx","components/Profile/MyPosts/MyPosts.tsx","redux/actions/profileAction.ts","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","redux/thunks/profileThunk.ts","components/common/FormsControl/FormsControl.tsx","hoc/withAuthRedirect.tsx","utils/validators/validtors.ts","webpack://connectify/./src/components/common/FormsControl/FormsControls.module.css?f75b","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__rDg72\"};","import React, {ChangeEvent, useEffect, useState} from 'react';\r\n\r\n\r\ntype ProfileStatusPropsType = {\r\n    status: string,\r\n    updateUserStatus: (status: string) => void\r\n\r\n}\r\n\r\nexport const ProfileStatusWithHooks = (props: ProfileStatusPropsType) => {\r\n    const {status, updateUserStatus} = props\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [localStatus, setLocalStatus] = useState(status);\r\n\r\n    useEffect(()=>{\r\n        setLocalStatus(status)\r\n    },[status]);\r\n\r\n    const onUpdateStatusChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setLocalStatus(e.currentTarget.value)\r\n    }\r\n        const onPressEnter = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n            if (e.key === \"Enter\") {\r\n                deactivateEditMode()\r\n            }\r\n        }\r\n\r\n\r\n\r\n    const activateMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        updateUserStatus(localStatus)\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            {!editMode ?\r\n                <p onDoubleClick={activateMode}>{status || \"No status\"}</p>\r\n                : <div>\r\n                    <input\r\n                        onChange={onUpdateStatusChangeHandler}\r\n                        autoFocus={true}\r\n                        onBlur={deactivateEditMode}\r\n                        onKeyPress={onPressEnter}\r\n                        value={localStatus}\r\n                    />\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\n","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport ProfileStatus from \"./ProfileStatus\"\r\nimport {ProfileType} from \"../../../types/profilePageTypes\";\r\nimport {ProfileStatusWithHooks} from \"./ProfileStatusWithHooks\";\r\n\r\ntype ProfileInfoPropsType = {\r\n    profile: ProfileType | null\r\n    status: string\r\n    updateUserStatus: (status: string) => void\r\n\r\n}\r\n\r\nconst ProfileInfo: React.FC<ProfileInfoPropsType> = ({profile, status, updateUserStatus}) => {\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile?.photos.large} />\r\n                <p>{profile?.fullName}</p>\r\n                <ProfileStatusWithHooks status={status} updateUserStatus={updateUserStatus}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__6+HC-\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__Dm28h\"};","import React from \"react\";\r\nimport s from './Post.module.css';\r\n\r\n\r\ntype PostTypeProps ={\r\n    message: string,\r\n    likesCount: number\r\n    id: number\r\n}\r\n\r\nexport function Post(props:PostTypeProps){\r\n    return(\r\n        <div className={s.item}>\r\n            <img src='https://shapka-youtube.ru/wp-content/uploads/2021/02/avatarka-dlya-skaypa-dlya-parney.jpg'/>\r\n            { props.message }\r\n            <div>\r\n                <span>like</span> {props.likesCount}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport React from \"react\";\r\nimport {UserType} from \"../../../../types/usersTypes\";\r\nimport {maxLengthCreator, required} from \"../../../../utils/validators/validtors\";\r\nimport {Textarea} from \"../../../common/FormsControl/FormsControl\";\r\n\r\n\r\n\r\nexport type FormDataType = {\r\n    newPostText: string\r\n    currentUser: UserType\r\n}\r\n\r\nlet maxLength10 = maxLengthCreator(10);\r\n\r\nexport const PostForm: React.FC<InjectedFormProps<FormDataType>> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    validate={[required,maxLength10]}\r\n                    component={Textarea}\r\n                    placeholder={\"What's new?\"}\r\n                    name=\"newPostText\"/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport const PostFormRedux = reduxForm<FormDataType>({form: \"ProfileAddNewPostForm\"})(PostForm)","import React from 'react'\r\nimport s from './MyPosts.module.css';\r\nimport {Post} from \"./Post/Post\";\r\nimport {MyPostsPropsType} from \"./MyPostsContainer\";\r\nimport {FormDataType, PostFormRedux} from \"./Post/PostForm\";\r\n\r\n\r\nexport const MyPosts:React.FC<MyPostsPropsType> = React.memo((props) => {\r\n\r\n    console.log(\"RENDER\")\r\n    let postsElements = props.posts.map((p) => <Post id={p.id} message={p.message} likesCount={p.likesCount} key={p.id}/>)\r\n\r\n    let newPostElement = React.createRef<HTMLTextAreaElement>();\r\n\r\n    let onAddPost = (values: FormDataType) => {\r\n        props.addPost(values.newPostText)\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <PostFormRedux onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\n","import {\r\n    PROFILE_DELETE_POST,\r\n    PROFILE_POST_ADD,\r\n    PROFILE_SET_STATUS,\r\n    PROFILE_SET_USER_PROFILE,\r\n    UPDATE_NEW_POST_TEXT\r\n} from \"./actionTypes\";\r\nimport {ProfileType} from \"../../types/profilePageTypes\";\r\n\r\nexport type ProfileActionType = ReturnType<typeof addPostActionCreator>\r\n    | ReturnType<typeof deletePostAC>\r\n    | ReturnType<typeof updateNewPostTextAC>\r\n    | ReturnType<typeof setUserProfileAC>\r\n    | ReturnType<typeof setUserStatusAC>\r\n\r\nexport const addPostActionCreator = (newPostText: string) => {\r\n    return {\r\n        type: PROFILE_POST_ADD as typeof PROFILE_POST_ADD,\r\n        newPostText: newPostText\r\n    } as const\r\n}\r\n\r\nexport const deletePostAC = (postId: number) => {\r\n    return {\r\n        type: PROFILE_DELETE_POST as typeof PROFILE_DELETE_POST,\r\n        postId: postId\r\n    } as const\r\n\r\n}\r\n\r\nexport const setUserProfileAC = (profile: ProfileType | null) => {\r\n    return {\r\n        type: PROFILE_SET_USER_PROFILE as typeof PROFILE_SET_USER_PROFILE,\r\n        profile: profile\r\n    } as const\r\n}\r\nexport const setUserStatusAC = (status: string) => {\r\n    return {\r\n        type: PROFILE_SET_STATUS as typeof PROFILE_SET_STATUS,\r\n        status: status\r\n    } as const\r\n}\r\n\r\n\r\nexport const updateNewPostTextAC = (newText: string) => {\r\n    return {\r\n        type: UPDATE_NEW_POST_TEXT as typeof UPDATE_NEW_POST_TEXT,\r\n        newText: newText\r\n    } as const\r\n}\r\n\r\n","import React from 'react'\r\n\r\nimport {MyPosts} from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {ReduxStateType} from \"../../../redux/redux-store\";\r\nimport {PostType} from \"../../../types/profilePageTypes\";\r\nimport {addPostActionCreator} from \"../../../redux/actions/profileAction\";\r\n\r\n\r\ntype MapStatePropsType = {\r\n    posts: PostType[],\r\n    newPostText: string\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    addPost: (newPostText: string) => void\r\n}\r\n\r\nexport type MyPostsPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nconst mapStateToProps = (state: ReduxStateType): MapStatePropsType => {\r\n    return {\r\n        posts: state.profilePage.posts\r\n        ,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch:any): MapDispatchPropsType => {\r\n    return {\r\n        addPost:(newPostText: string) => {\r\n            dispatch(addPostActionCreator(newPostText))\r\n        }\r\n    }\r\n}\r\n\r\nexport const MyPostContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);","import React from \"react\";\r\nimport ProfileInfo from \"./Profileinfo/ProfileInfo\";\r\nimport {MyPostContainer} from \"./MyPosts/MyPostsContainer\";\r\nimport {withRouterPropsType} from \"./ProfileContainer\";\r\n\r\n\r\nexport const Profile = (props: withRouterPropsType) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateUserStatus={props.updateUserStatus} />\r\n            <MyPostContainer/>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Profile} from \"./Profile\";\r\nimport {ReduxStateType} from \"../../redux/redux-store\";\r\nimport {compose} from \"redux\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\nimport {ProfileType} from \"../../types/profilePageTypes\";\r\nimport {ActionsType} from \"../../redux/actions/actionCreatorTypes\";\r\nimport {getUserStatusTC, setUserProfileTC, updateUserStatusTC} from \"../../redux/thunks/profileThunk\";\r\n\r\n\r\n\r\nexport type ProfileContainerPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\n\r\ntype MapStatePropsType = {\r\n    profile: ProfileType | null\r\n    status: string\r\n    authorizedUserId: number | null\r\n    isAuth: boolean\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    setUserProfile: (userId: string) => void\r\n    getUserStatus: (userId: string) => void\r\n    updateUserStatus: (status: string) => void\r\n}\r\n\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\n\r\nexport type withRouterPropsType = RouteComponentProps<PathParamsType> & ProfileContainerPropsType\r\n\r\n\r\nexport class ProfileContainer extends React.Component<withRouterPropsType> {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = String(this.props.authorizedUserId)\r\n        }\r\n        this.props.setUserProfile(userId)\r\n        this.props.getUserStatus(userId)\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateUserStatus={this.props.updateUserStatus}/>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nlet mapStateToProps = (state: ReduxStateType): MapStatePropsType => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.id,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: ThunkDispatch<ReduxStateType, undefined, ActionsType>) => {\r\n    return {\r\n        setUserProfile: (userId: number) => {\r\n            dispatch(setUserProfileTC(userId))\r\n        },\r\n        getUserStatus: (userId: number) => {\r\n            dispatch(getUserStatusTC(userId))\r\n\r\n        },\r\n        updateUserStatus: (status: string) => {\r\n            dispatch(updateUserStatusTC(status))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(connect(mapStateToProps, mapDispatchToProps),\r\n    withRouter,\r\n    withAuthRedirect)\r\n(ProfileContainer);\r\n\r\n\r\n","import {profileAPI, usersAPI} from \"../../api/api\";\r\nimport {setUserProfileAC, setUserStatusAC} from \"../actions/profileAction\";\r\nimport {Dispatch} from \"redux\";\r\n\r\n\r\ntype ThunkResult<R> = (dispatch: Dispatch) => R\r\n\r\nexport const getUserStatusTC = (userId: number): ThunkResult<void> => async (dispatch: Dispatch) => {\r\n    let response = await profileAPI.getUserStatus(userId)\r\n        dispatch(setUserStatusAC(response.data))\r\n}\r\n\r\nexport const updateUserStatusTC = (status: string): ThunkResult<void> => async (dispatch) => {\r\n    let response = await profileAPI.updateUserStatus(status)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setUserStatusAC(status))\r\n    }\r\n}\r\n\r\nexport const setUserProfileTC = (userId: number) => async (dispatch: Dispatch) => {\r\n    let response = await usersAPI.getProfile(userId)\r\n        dispatch(setUserProfileAC(response.data))\r\n}\r\n\r\n\r\n\r\n","import React, {DetailedHTMLProps, TextareaHTMLAttributes} from \"react\";\r\nimport {Field, WrappedFieldMetaProps} from \"redux-form\";\r\nimport styles from './FormsControls.module.css'\r\nimport {FieldValidatorType} from \"../../../utils/validators/validtors\";\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<TextareaHTMLAttributes<HTMLTextAreaElement>, HTMLTextAreaElement>\r\ntype FormsControlType = {\r\n    input: DefaultInputPropsType\r\n    meta: WrappedFieldMetaProps\r\n    FormType: string\r\n}\r\nexport const FormsControls: React.FC<FormsControlType> = ({\r\n                                                              input,\r\n                                                              meta,\r\n                                                              FormType,\r\n                                                              ...props\r\n                                                          }) => {\r\n    const error = meta.touched && meta.error\r\n    const finalInputName = `${styles.formControl} ${error ? styles.error : ''}`\r\n\r\n    return (\r\n        <div className={finalInputName}>\r\n            <FormType {...input} {...props}/>\r\n            {error && <div className={styles.errorMessage}>{meta.error}</div>}\r\n        </div>\r\n    )\r\n}\r\nexport const Textarea: React.FC<FormsControlType> = ({...props}) => {\r\n        return (\r\n            <FormsControls {...props} FormType={\"textarea\"}/>\r\n        )\r\n}\r\n\r\nexport const Input: React.FC<FormsControlType> = ({...props}) => {\r\n    return (\r\n        <FormsControls {...props} FormType={\"input\"}/>\r\n    )\r\n}\r\n\r\nexport function createField<FormKeyType extends string>(\r\n    placeholder: string | undefined,\r\n    name: FormKeyType,\r\n    validators: Array<FieldValidatorType>,\r\n    component: React.FC<FormsControlType>,\r\n    props?: {\r\n        className?: string,\r\n        type?: string\r\n    },\r\n    text = '',\r\n) {\r\n    return (\r\n        <div className={styles.createFieldRoot}>\r\n            <Field\r\n                placeholder={placeholder}\r\n                name={name}\r\n                validate={validators}\r\n                component={component}\r\n                className={props?.className}\r\n                {...props}\r\n            />{' '}\r\n            <label className={styles.createFieldText}> {text} </label>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport type GetStringKeys<T> = Extract<keyof T, string>;","import React, {ComponentType} from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {ReduxStateType} from \"../redux/redux-store\";\r\n\r\n\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\nconst mapStateToProps = (state: ReduxStateType): MapStatePropsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n\r\n}\r\n\r\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\r\n    const RedirectComponent = (props: MapStatePropsType) => {\r\n        let {isAuth, ...restProps} = props\r\n\r\n        if (!isAuth) return <Redirect to=\"/login\"/>\r\n        return <Component {...restProps as T}/>\r\n    }\r\n    let ConnectedRedirectComponent = connect(mapStateToProps)(RedirectComponent)\r\n\r\n    return ConnectedRedirectComponent;\r\n};\r\n","export type FieldValidatorType = (value: string) => string | undefined\r\nexport const required = (value: any) => {\r\n    if (value) {\r\n        return undefined\r\n    } else {\r\n        return \"error message\"\r\n    }\r\n\r\n}\r\nexport const maxLengthCreator = (maxLength: number) => (value: any) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControls_formControl__KaVHj\",\"error\":\"FormsControls_error__VuK27\",\"errorMessage\":\"FormsControls_errorMessage__KVrex\",\"formSummaryError\":\"FormsControls_formSummaryError__FRBhk\"};","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["ProfileStatusWithHooks","props","status","updateUserStatus","useState","editMode","setEditMode","localStatus","setLocalStatus","useEffect","deactivateEditMode","onChange","e","currentTarget","value","autoFocus","onBlur","onKeyPress","key","onDoubleClick","profile","className","s","src","photos","large","fullName","Post","message","likesCount","maxLength10","maxLengthCreator","PostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","validate","required","component","Textarea","placeholder","name","MyPosts","React","console","log","postsElements","posts","map","p","id","values","addPost","newPostText","setUserStatusAC","type","PROFILE_SET_STATUS","MyPostContainer","connect","state","profilePage","dispatch","PROFILE_POST_ADD","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","String","authorizedUserId","setUserProfile","getUserStatus","compose","auth","isAuth","usersAPI","response","data","PROFILE_SET_USER_PROFILE","setUserProfileTC","profileAPI","getUserStatusTC","resultCode","updateUserStatusTC","withRouter","withAuthRedirect","FormsControls","input","meta","FormType","error","touched","finalInputName","styles","Input","createField","validators","text","mapStateToProps","Component","restProps","to","maxLength","length","_slicedToArray","arr","i","Array","isArray","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","push","err","unsupportedIterableToArray","TypeError"],"sourceRoot":""}